[gd_scene load_steps=3 format=2]

[ext_resource path="res://Actors/Enemies/Egg/Egg.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]

script/source = "extends Node

onready var actor = $Egg
var spawnPos = Vector2(0,0)

var AIThread = Thread.new()
func _think(par):
	while(par.get_ref()):
		if (!actor.in_combat and (_checkForStartCombat() or _antagonizeEnemy())):
			actor.setInCombat(true)
			#TODO: any stuff that needs to be done when entering combat
		if (actor.in_combat):
			actor.queueAbilityTowardsByName(\"Slam\", Vector2(100,100))
			if (actor.isOnGlobalCooldown()):
				OS.delay_msec(((actor.global_cooldown_ends - global.clock) * 1000) + 10)
			else:
				OS.delay_msec(50)
		else:
			actor.walkTowards(spawnPos + _randomPointInRadius(8))
			OS.delay_msec(1000)

func _antagonizeEnemy():
	for p in actor.world.Players.get_children():
		#TODO: check if sightline is free
		if actor.see_distance >= _distanceTo(p):
			p.setInCombat(true)
			return true
	return false

func _checkForStartCombat():
	for npc in actor.world.NPCs.get_children():
		#TODO: check for players and stuff
		if npc.isInCombat(): #TODO: check for visibily and alliedness
			return true
	return false

func _distanceTo(thing):
	return getPosition().distance_to(thing.getPosition())

func getState():
	#TODO: add AI state to gets, grab it from sets
	if (typeof(actor) != TYPE_NIL):
		return actor.getState()
	else:
		print(\"FAILED TO GET STATE \" + self.name)
		return null
func setState(state):
	if (typeof(actor) != TYPE_NIL):
		actor.setState(state)
	else:
		print(\"FAILED TO SET STATE \" + self.name)

func setSpawnPosition(pos):
	spawnPos = Vector2(pos.x, pos.z)

func isInCombat():
	return actor.in_combat

func getPosition():
	return actor.global_transform.origin

func _ready():
	randomize()
	actor.setPosition(spawnPos)
	var e = AIThread.start(self, \"_think\", weakref(self))
	print(e)

func _randomPointInRadius(rad):
	var vec = Vector2(0, randf() * rad)
	return vec.rotated(randf() * 2 * PI)
"

[node name="Node" type="Node"]

script = SubResource( 1 )

[node name="Egg" parent="." index="0" instance=ExtResource( 1 )]


