[gd_scene load_steps=9 format=2]

[ext_resource path="res://Actors/PlayerActor.tscn" type="PackedScene" id=1]
[ext_resource path="res://Controllers/UI/Damage.tscn" type="PackedScene" id=2]
[ext_resource path="res://Controllers/UI/Inventory.tscn" type="PackedScene" id=3]
[ext_resource path="res://Controllers/UI/HUD.tscn" type="PackedScene" id=4]
[ext_resource path="res://Controllers/UI/Abilities.tscn" type="PackedScene" id=5]
[ext_resource path="res://Controllers/UI/Markermat.material" type="Material" id=6]

[sub_resource type="GDScript" id=1]

script/source = "extends \"res://Controllers/PController.gd\"

func _unhandled_input(event):
	#TODO: limit inputs if actor is busy, allow readying of actions during cool downs
	if (event.is_pressed()):
		if (event.is_action(\"toggle_combat\")):
			actor.toggleInCombat()
		if (event.is_action(\"move\")): #TODO: separate combat move from regular
			attacking = false
			var clickpos = _get_pos_at_mouse()
			if (clickpos != null):
				var clickpos2D = global.to2D(clickpos)
				actor.walkTowards(clickpos2D)
		
		if (event.is_action(\"cancel\")):
			_hideAllAbilities()
			selected_ability = -1
		
		else: if (event.is_action(\"Ability1\")):
			_selectAbility(0)
		else: if (event.is_action(\"Ability2\")):
			_selectAbility(1)
		else: if (event.is_action(\"Ability3\")):
			_selectAbility(2)
		else: if (event.is_action(\"Ability4\")):
			_selectAbility(3)
		else: if (event.is_action(\"Ability5\")):
			_selectAbility(4)
		else: if (event.is_action(\"Ability6\")):
			_selectAbility(5)
		else: if (event.is_action(\"Ability7\")):
			_selectAbility(6)
		else: if (event.is_action(\"Ability8\")):
			_selectAbility(7)
		else: if (event.is_action(\"Ability9\")):
			_selectAbility(8)
		else: if (event.is_action(\"Ability10\")):
			_selectAbility(9)
		
		else: if (event.is_action(\"interact\")):
				if (selected_ability >= 0 and _checkAbilityByIndex(selected_ability)):
					var sa = selected_ability
					selected_ability = -1
					var mouse_pos = get_viewport().get_mouse_position()
					var clickpos = global.xzPlaneIntersect(cam3D.project_ray_origin(mouse_pos), cam3D.project_ray_normal(mouse_pos))
					if (clickpos != null):
						var clickpos2D = global.to2D(clickpos)
						actor.queueAbilityTowardsByName(ability_list[sa].get_ref().name, clickpos2D)
				else:
					#TODO: ignore items on the ground if in combat
					var atClick = _get_item_at_mouse()
					if (atClick != null and atClick.has_method(\"__ITEM\")):
						actor.pickUp(atClick)
					else: if (atClick != null and atClick.has_method(\"__TRANSITION\")):
						actor.moveThrough(atClick)
		
		else: if (event.is_action(\"inventory\")):
			_toggle_inventory()
		else: if (event.is_action(\"abilities\")):
			_toggle_abilities()

func setInCombat(combat):
	actor.setInCombat(combat)
	HUD.setInCombat(combat)

func drop_item(id):
	actor.dropItem(id)

func equip_item(id):
	actor.equipItem(id)

func unequip_item(type):
	actor.unequipItem(type)


func _on_Actor_in_combat():
	HUD.setInCombat(true)

func _on_Actor_out_combat():
	HUD.setInCombat(false)

func _on_Actor_scene_switch(toMap, toPoint):
	get_node(\"/root/World\").changeScene(self, toMap, toPoint)
"

[sub_resource type="ArrayMesh" id=2]

blend_shape_mode = 1
custom_aabb = AABB( 0, 0, 0, 0, 0, 0 )
surfaces/0 = {
"aabb": AABB( -0.381644, 0.125016, -0.381644, 0.763288, 1.02737, 0.763288 ),
"array_data": PoolByteArray( 0, 0, 156, 60, 0, 0, 0, 60, 0, 126, 0, 0, 127, 0, 0, 127, 0, 56, 189, 51, 27, 182, 156, 60, 27, 54, 0, 60, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 189, 51, 141, 181, 156, 60, 0, 0, 0, 60, 0, 126, 0, 0, 127, 0, 0, 127, 200, 41, 189, 51, 27, 54, 156, 60, 27, 54, 0, 60, 119, 216, 246, 0, 11, 0, 126, 127, 255, 59, 189, 51, 141, 53, 156, 60, 0, 0, 0, 60, 120, 216, 0, 0, 1, 3, 126, 127, 163, 59, 189, 51, 0, 0, 0, 48, 0, 0, 0, 60, 120, 216, 0, 0, 1, 3, 126, 127, 0, 56, 0, 60, 27, 182, 156, 60, 27, 54, 0, 60, 10, 216, 119, 0, 126, 0, 245, 129, 0, 0, 189, 51, 0, 0, 156, 60, 141, 53, 0, 60, 0, 216, 120, 0, 126, 0, 0, 129, 255, 55, 189, 51, 0, 0, 0, 48, 0, 0, 0, 60, 0, 216, 120, 0, 127, 0, 0, 129, 0, 56, 0, 60, 27, 182, 156, 60, 27, 182, 0, 60, 137, 216, 10, 0, 11, 0, 126, 129, 0, 0, 189, 51, 141, 181, 156, 60, 0, 0, 0, 60, 136, 216, 0, 0, 1, 253, 126, 129, 200, 41, 189, 51, 0, 0, 0, 48, 0, 0, 0, 60, 136, 216, 0, 0, 1, 253, 126, 129, 0, 56, 0, 60, 27, 54, 156, 60, 27, 182, 0, 60, 246, 216, 137, 0, 126, 0, 245, 127, 0, 60, 189, 51, 0, 0, 156, 60, 141, 181, 0, 60, 0, 216, 136, 0, 127, 0, 0, 127, 0, 56, 189, 51, 0, 0, 0, 48, 0, 0, 0, 60, 0, 216, 136, 0, 127, 0, 0, 127, 0, 56, 0, 60, 27, 182, 156, 60, 27, 182, 0, 60, 10, 216, 137, 0, 126, 0, 11, 127, 0, 0, 189, 51, 0, 0, 0, 48, 0, 0, 0, 60, 136, 216, 0, 0, 1, 253, 130, 127, 0, 56, 0, 60, 141, 181, 156, 60, 0, 0, 0, 60, 136, 216, 0, 0, 1, 253, 130, 127, 200, 41, 189, 51, 27, 182, 156, 60, 27, 54, 0, 60, 137, 216, 246, 0, 11, 0, 130, 127, 0, 0, 189, 51, 27, 54, 156, 60, 27, 54, 0, 60, 246, 216, 119, 0, 126, 0, 11, 129, 255, 59, 189, 51, 0, 0, 0, 48, 0, 0, 0, 60, 120, 216, 0, 0, 1, 3, 130, 129, 0, 56, 0, 60, 141, 53, 156, 60, 0, 0, 0, 60, 120, 216, 0, 0, 1, 3, 130, 129, 163, 59, 189, 51, 27, 54, 156, 60, 27, 182, 0, 60, 119, 216, 10, 0, 11, 0, 130, 129, 0, 60, 189, 51, 141, 53, 156, 60, 0, 0, 0, 60, 0, 127, 0, 0, 126, 0, 0, 127, 163, 59, 189, 51, 27, 54, 156, 60, 27, 54, 0, 60, 0, 127, 0, 0, 127, 0, 0, 127, 255, 59, 189, 51, 27, 54, 156, 60, 27, 182, 0, 60, 0, 127, 0, 0, 126, 0, 251, 127, 0, 60, 189, 51, 0, 0, 156, 60, 141, 181, 0, 60, 0, 126, 0, 0, 127, 0, 0, 127, 0, 56, 189, 51, 27, 182, 156, 60, 27, 182, 0, 60, 0, 127, 0, 0, 126, 0, 5, 127, 0, 0, 189, 51, 0, 0, 156, 60, 141, 53, 0, 60, 0, 126, 0, 0, 127, 0, 0, 127, 255, 55, 189, 51 ),
"array_index_data": PoolByteArray( 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 0, 11, 0, 12, 0, 13, 0, 14, 0, 14, 0, 13, 0, 15, 0, 16, 0, 17, 0, 18, 0, 8, 0, 7, 0, 19, 0, 20, 0, 21, 0, 22, 0, 23, 0, 24, 0, 0, 0, 25, 0, 0, 0, 26, 0, 26, 0, 0, 0, 27, 0, 24, 0, 28, 0, 0, 0, 1, 0, 0, 0, 28, 0, 0, 0, 2, 0, 27, 0, 0, 0, 25, 0, 23, 0 ),
"blend_shape_data": [  ],
"format": 98071,
"index_count": 48,
"material": ExtResource( 6 ),
"name": "Markermat",
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 29
}

[node name="Node" type="Node" index="0"]

script = SubResource( 1 )

[node name="Actor" parent="." index="0" instance=ExtResource( 1 )]

[node name="Camera2D" type="Camera2D" parent="Actor" index="1"]

anchor_mode = 1
rotating = false
current = false
zoom = Vector2( 1, 1 )
limit_left = -10000000
limit_top = -10000000
limit_right = 10000000
limit_bottom = 10000000
limit_smoothed = false
drag_margin_h_enabled = true
drag_margin_v_enabled = true
smoothing_enabled = false
smoothing_speed = 5.0
offset_v = 0.0
offset_h = 0.0
drag_margin_left = 0.2
drag_margin_top = 0.2
drag_margin_right = 0.2
drag_margin_bottom = 0.2
editor_draw_screen = true
editor_draw_limits = false
editor_draw_drag_margin = false
_sections_unfolded = [ "Drag Margin", "Smoothing", "Transform" ]

[node name="Camera" type="Camera" parent="Actor/Spatial" index="1"]

transform = Transform( 0.939693, 0.241845, -0.241845, 0, 0.707107, 0.707107, 0.34202, -0.664463, 0.664463, -1.5, 5, 4 )
keep_aspect = 1
cull_mask = 1048575
environment = null
h_offset = 0.0
v_offset = 0.0
doppler_tracking = 0
projection = 0
current = false
fov = 70.0
size = 1.0
near = 0.05
far = 160.0
_sections_unfolded = [ "Transform" ]

[node name="ClickCast" type="RayCast2D" parent="." index="1"]

enabled = true
exclude_parent = true
cast_to = Vector2( 1, 1 )
collision_mask = 524288

[node name="CanvasLayer" type="CanvasLayer" parent="." index="2"]

layer = 2
offset = Vector2( 0, 0 )
rotation = 0.0
scale = Vector2( 1, 1 )
transform = Transform2D( 1, 0, 0, 1, 0, 0 )

[node name="Damage" parent="CanvasLayer" index="0" instance=ExtResource( 2 )]

margin_left = 7.0
margin_top = 10.0
margin_right = 196.0
margin_bottom = 42.0
rect_clip_content = false

[node name="Inventory" parent="CanvasLayer" index="1" instance=ExtResource( 3 )]

visible = false
rect_clip_content = false
_sections_unfolded = [ "Margin", "Rect" ]

[node name="HUD" parent="CanvasLayer" index="2" instance=ExtResource( 4 )]

[node name="Abilities" parent="CanvasLayer" index="3" instance=ExtResource( 5 )]

visible = false
margin_left = 1128.0
margin_top = 8.0
margin_right = 1142.0
margin_bottom = 22.0
rect_clip_content = false

[node name="WalkMarker" type="Spatial" parent="." index="3"]

visible = false

[node name="Marker" type="MeshInstance" parent="WalkMarker" index="0"]

layers = 1
material_override = null
cast_shadow = 0
extra_cull_margin = 0.0
use_in_baked_light = true
lod_min_distance = 0.0
lod_min_hysteresis = 0.0
lod_max_distance = 0.0
lod_max_hysteresis = 0.0
mesh = SubResource( 2 )
skeleton = NodePath("..")
material/0 = null
_sections_unfolded = [ "Geometry" ]

[node name="AnimationPlayer" type="AnimationPlayer" parent="WalkMarker" index="1"]

root_node = NodePath("..")
autoplay = ""
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 1.0
blend_times = [  ]

[node name="MouseCast" type="RayCast" parent="." index="4"]

enabled = false
exclude_parent = true
cast_to = Vector3( 0, -1, 0 )
collision_mask = 1

[connection signal="damage_updated" from="Actor" to="." method="_on_Actor_damage_updated"]

[connection signal="equipment_updated" from="Actor" to="." method="_on_Actor_equipment_updated"]

[connection signal="in_combat" from="Actor" to="." method="_on_Actor_in_combat"]

[connection signal="inventory_updated" from="Actor" to="." method="_on_Actor_inventory_updated"]

[connection signal="out_combat" from="Actor" to="." method="_on_Actor_out_combat"]

[connection signal="scene_switch" from="Actor" to="." method="_on_Actor_scene_switch"]


[editable path="Actor"]
