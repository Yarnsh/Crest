[gd_scene load_steps=4 format=2]

[ext_resource path="res://Abilities/Assets/Attackindicatormat.material" type="Material" id=1]
[ext_resource path="res://Abilities/AbilityIndicator.gd" type="Script" id=2]

[sub_resource type="GDScript" id=1]

script/source = "extends \"res://Abilities/BaseAbility.gd\"

const ability_art = preload(\"res://Abilities/Assets/Slash.png\")
const ability_name = \"Shoot\"
const ability_desc = \"pew pew pew\"

const startup = 0.75
const cooldown = 1.0
const anim_cooldown = 1.0

func _ready():
	set_process(false)

func startTowards(point):
	pointTowards(point)
	
	if (_onCooldown() or ability_user == null or ability_user.get_ref() == null or ability_user.get_ref().isOnGlobalCooldown()):
		hideArea()
		return
	
	ability_user.get_ref().lock()
	ability_user.get_ref().is_attacking = true
	ability_user.get_ref().startAnimCooldown(anim_cooldown)
	ability_user.get_ref()._anim_playing(\"Bow_Fire\")
	ability_user.get_ref()._turn_towards(point)
	
	if (ability_user.get_ref().has_method(\"setBusy\")):
		ability_user.get_ref().setBusy(true)
		showArea()
		shown = true
		#TODO: start appropriate animation
		#TODO: play whatever noises
		_beginStartup()
		set_process(true)
	
	ability_user.get_ref().unlock()

func _do():
	ability_user.get_ref().lock()
	ability_user.get_ref().is_attacking = false
	
	ability_user.get_ref().startGlobalCooldown()
	ability_user.get_ref().setBusy(false)
	
	var bods = collider.get_overlapping_bodies()
	for b in bods:
		if (b.has_method(\"takeHit\") and b != ability_user.get_ref()):
			b.takeHit(15, ability_user) #TODO: make this depend on weapon and what damage was rolled
	
	hideArea()
	shown = false
	
	ability_user.get_ref().unlock()

func _process(delta):
	if (!_onStartup()):
		set_process(false)
		_do()"

[node name="BowShoot" type="Node2D" index="0"]

script = SubResource( 1 )
_sections_unfolded = [ "Transform" ]

[node name="Collider" type="Area2D" parent="." index="0"]

visible = false
input_pickable = false
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
monitorable = false
collision_layer = 0
audio_bus_override = false
audio_bus_name = "Master"
_sections_unfolded = [ "Collision", "Pickable", "Transform" ]

[node name="Shape" type="CollisionPolygon2D" parent="Collider" index="0"]

modulate = Color( 1, 0, 0, 1 )
build_mode = 0
polygon = PoolVector2Array( -0.422974, -13.7341, 930.075, -13.7341, 930.075, 16.1942, -0.422974, 16.1942 )
_sections_unfolded = [ "Material", "Transform", "Visibility" ]

[node name="Model" type="ImmediateGeometry" parent="Collider/Shape" index="0"]

visible = false
layers = 1
material_override = ExtResource( 1 )
cast_shadow = 1
extra_cull_margin = 0.0
use_in_baked_light = false
lod_min_distance = 0.0
lod_min_hysteresis = 0.0
lod_max_distance = 0.0
lod_max_hysteresis = 0.0
script = ExtResource( 2 )
_sections_unfolded = [ "Geometry" ]


